Git Usage
=========

[Docs][1]
[Git tips][2]

Add git submodule
-----------------
    cd project
    git submodule add git://github.com/dchelimsky/rspec.git vendor\plugins\rspec

Then on older git versions:

    git submodule init
    git submodule update

[blog](http://chrisjean.com/2009/04/20/git-submodules-adding-using-removing-and-updating/)

Remove git submodule
--------------------

    Delete the relevant line from the .gitmodules file.
    Delete the relevant section from .git/config.
    git rm --cached path_to_submodule (no trailing slash).
    Commit and delete the now untracked submodule files.

From [Stackoverflow](http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule).

Git Email etc.
--------------
    $ git config --global user.name "Firstname Lastname" Sets the name of the user for all git instances on the system
    $ git config --global user.email "your_email@youremail.com"

Clone a repo
------------
    git clone git@github.com:daijo/~RestKit.git

Create branch
-------------
    git branch [branch_name]

Switch branch
-------------
    git checkout [branch_name]

Merge branch
------------
    git checkout master
    git merge [branch_name]

Delete branch
-------------
With check if changes are merged to otehr branch first:

    git branch -d [branch_name]

Without check, force delete:

    git branch -D [branch_name]

Add upstream and fetch from upstream
------------------------------------
    cd Spoon-Knife
    $ git remote add upstream git://github.com/octocat/Spoon-Knife.git
    $ git fetch upstream

Fetch and merge
---------------
    $ git fetch upstreamFetches any new changes from the original repo
    $ git merge upstream/master

Pull from repo
--------------
    git pull /Users/daijo/Dropbox/Patchwork/Projects/webpage.git/ master

Discard your changes
--------------------
    git checkout master -f
    git clean -f

Example .gitignore
------------------
    bin/*
    gen/*
    .DS_Store

Add and commit changed file
---------------------------
    git add [file]  
    git commit

Change your mind after add
--------------------------
    git rm -r --cached .

Push to repo
------------
    git push /Users/daijo/Dropbox/Patchwork/Projects/webpage.git/

alt.

    git push

Put on Github
-------------
Create a repo on github (say it's called created_repo)

    cd existing_repo
    git remote add origin git@github.com:daijo/created_repo.git
    git push origin master

Lightweight Tag
---------------
    git tag tag_name

Viewing available tags is done with -l:

    git tag -l

push tags with:

    git push --tags

Search for pattern
------------------

    git grep -p [pattern]


[1]: https://www.kernel.org/pub/software/scm/git/docs/
[2]: http://mislav.uniqpath.com/2010/07/git-tips/
