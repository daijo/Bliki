Arduino Build
=============

The Arduino enviroment consist of a few different parts:

* 1) The Arduino IDE
* 2) The Arduino libraries
* 3) The Arduino bootloader

It uses the same tool chain as described in AvrBuild. Focus here will mostly be on part 2) and 3).\
The IDE can be replace with your favorite editor and a Makefile.

Arduino on ~ATtiny
-----------------

Officially Arduino only supports ~ATmega devices but it is possible to run on ~ATtiny.\
It might be a good idea to prototype on a full Arduino board and later move to a small\
custom board with a ~ATtiny if the number of required I/O pins permit.

* <http://hlt.media.mit.edu/?p=1695>
* <https://github.com/damellis/attiny/tree/Arduino1>

Arduino Makefile
----------------

Todo: update with the makefile at <http://ed.am/dev/make/arduino-mk>

To build Arduino using MakeTool while still using the Arduino libraries etc. 

[Docs](http://mjo.tc/atelier/2009/02/arduino-cli.html)

### Prerequisites

* The AVR tool chain. See AvrBuild.
* Perl YAML module (to parse boards.txt).
* The [Ardunio environment](http://arduino.cc/en/Main/Software).
* The [Makefile](https://github.com/mjoldfield/Arduino-Makefile).

Libraries
---------

Put extra libs in /Applications/Arduino.app/Contents/Resources/Java/libraries.

I have added the libraries I use (MsTimer2, ProtoThreads, HCSR04Ultrasonic and SerialLCD) to a GitVersionControl [repository](https://github.com/daijo/~ArduinoLibraries) that I can sync with the Arduino enviromment. Hopefully this will be redundant in the future with a more centralized and automated approach to libraries in the Arduino world.


